<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:gui="clr-namespace:MathStat.Styles">
    <!--<Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle 
                        Margin="2"
                        StrokeDashArray="1 2"
                        SnapsToDevicePixels="true"
                        StrokeThickness="1" 
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--<SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>-->

    <ControlTemplate TargetType="{x:Type Button}" x:Key="ButtonTemplate">
        <Grid>
            <Border x:Name="border"
                    CornerRadius="{gui:ThemeResource ResourceKey=ButtonCornerRadius}"
                Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            
        </Border>
            <Border x:Name="FocusBorder"
                    CornerRadius="{gui:ThemeResource ResourceKey=ButtonCornerRadius}"
                    BorderBrush="{gui:ThemeResource ResourceKey=ButtonControlFocusBorder}"
                    BorderThickness="{gui:ThemeResource ResourceKey=ButtonControlFocusBorderThickness}"
                    Visibility="Collapsed">

            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{gui:ThemeResource ResourceKey=ButtonControlDefaultBorder}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="orange"/>
                <Setter Property="BorderBrush" TargetName="border" Value="orange"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="cyan"/>
                <Setter Property="BorderBrush" TargetName="border" Value="cyan"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="{gui:ThemeResource ResourceKey=ControlDisabledOpacity}"/>
                <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Disabled.Border}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Disabled.Foreground}"/>-->
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{gui:ThemeResource ResourceKey=ButtonContentBackground}"/>
        <Setter Property="BorderBrush" Value="{gui:ThemeResource ResourceKey=ButtonControlBorder}"/>
        <Setter Property="Foreground" Value="{gui:ThemeResource ResourceKey=ButtonControlForeground}"/>
        <Setter Property="BorderThickness" Value="{gui:ThemeResource ResourceKey=ButtonControlBorderThickness}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
    </Style>-->

    <ControlTemplate x:Key="WindowButtonTemplate" TargetType="{x:Type Button}">
        <Grid Background="Transparent">
            <Border
                x:Name="MouseOverBorder"
                Background="{gui:ThemeResource ResourceKey=HeaderButtonControlDefaultColor}"
                BorderThickness="{gui:ThemeResource ResourceKey=HeaderButtonControlBorderThickness}"
                Opacity="{gui:ThemeResource ResourceKey=HeaderButtonControlOpacity}" />
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="MouseOverBorder" Property="Opacity" Value="1" />
                <Setter Property="Background" TargetName="MouseOverBorder" Value="{gui:ThemeResource ResourceKey=HeaderButtonControlBackgroundColor}"/>
                <Setter Property="BorderBrush" TargetName="MouseOverBorder" Value="{gui:ThemeResource ResourceKey=HeaderButtonControlBorderColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="WindowButtonStyle"
        TargetType="{x:Type Button}">
        <Setter Property="Height" Value="28" />
        <Setter Property="Width" Value="28" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <!--<Setter Property="Foreground" Value="{gui:ThemeResource ResourceKey=WindowHeaderForeground}" />-->
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource WindowButtonTemplate}" />
    </Style>
</ResourceDictionary>